// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks_controller

import (
	customerror "github.com/beto-ouverney/nikiti-books/customerror"
	mock "github.com/stretchr/testify/mock"
)

// IBookController is an autogenerated mock type for the IBookController type
type IBookController struct {
	mock.Mock
}

// FindAll provides a mock function with given fields:
func (_m *IBookController) FindAll() ([]byte, *customerror.CustomError) {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 *customerror.CustomError
	if rf, ok := ret.Get(1).(func() *customerror.CustomError); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*customerror.CustomError)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewIBookController interface {
	mock.TestingT
	Cleanup(func())
}

// NewIBookController creates a new instance of IBookController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIBookController(t mockConstructorTestingTNewIBookController) *IBookController {
	mock := &IBookController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
