// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// IHandler is an autogenerated mock type for the IHandler type
type IHandler struct {
	mock.Mock
}

// Create provides a mock function with given fields: w, r
func (_m *IHandler) Create(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Delete provides a mock function with given fields: w, r
func (_m *IHandler) Delete(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// FindAll provides a mock function with given fields: w, r
func (_m *IHandler) FindAll(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// FindOne provides a mock function with given fields: w, r
func (_m *IHandler) FindOne(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Update provides a mock function with given fields: w, r
func (_m *IHandler) Update(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

type mockConstructorTestingTNewIHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewIHandler creates a new instance of IHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIHandler(t mockConstructorTestingTNewIHandler) *IHandler {
	mock := &IHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
